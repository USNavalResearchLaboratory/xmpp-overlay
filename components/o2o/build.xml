<project name="OneToOne" default="dist" basedir=".">
	<description>One to One Chat Plugin for XOP</description>
	<property name="jar.name" value="o2o.jar" />

	<property name="build" location="build" />
	<property name="lib" location="lib" />
	<property name="dist" location="dist" />
	<property name="src" location="src" />
	<property name="docs" location="docs" />
	<property name="configs" location="config" />
	<property name="plugins" location="plugins" />

	<!-- needed for the deploy and undeploy targets -->
	<property name="xop_dir" location="../.." />
	<property name="xop_build_dir" location="${xop_dir}/build" />

	<path id="project.classpath">
		<fileset dir="${lib}" id="jars">
			<include name="*.jar" />
		</fileset>
      <fileset dir="${xop_dir}/dist/lib" id="xopjars">
			<include name="**/*.jar" />
		</fileset>
		<filelist>
			<file name="${xop_dir}/dist/xop.jar" />
		</filelist>

	</path>

	<target name="deps">

	</target>

	<!-- =================================
		target: init
	 ================================= -->
	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${docs}" />
	</target>

	<!-- ================================= 
        	 target: compile              
         ================================= -->
	<target name="compile" depends="init,deps" description="--> compile the source for the plugin">
		<javac srcdir="${src}" destdir="${build}" includeantruntime="false" debug="on">
			<compilerarg value="-Xlint:unchecked" />
			<classpath refid="project.classpath" />
			<src path="${src}" />
		</javac>
	</target>

	<!-- ================================= 
          target: dist      
         ================================= -->
	<target name="dist" depends="compile" description="generate the distribution jar">
		<!-- Convert project class path to string property for the manifest file -->
		<pathconvert property="mf.classpath-xop" pathsep=" ">
			<chainedmapper>
				<!-- Remove absolute path -->
				<flattenmapper />
				<!-- add lib/ prefix -->
				<globmapper from="*" to="../../lib/*" />
			</chainedmapper>
			<path>
				<fileset dir="${xop_dir}/dist/" id="xop_jars">
					<include name="lib/*.jar" />
				</fileset>
			</path>
		</pathconvert>


		<jar basedir="." destfile="${dist}/${jar.name}" update="true">
			<include name="src/**/*.java" />
			<include name="docs/**/*" />

			<fileset dir="${build}">
				<include name="**/*.class" />
				<include name="**/*.xml" />
			</fileset>
			<!--<filelist id="component" dir="src" files="component.xml" />-->
			<manifest>
				<attribute name="Created-By" value="${creator}" />
				<attribute name="Class-Path" value="${mf.classpath-component}" />
			</manifest>
		</jar>

		<!-- Copy libs, configs, and plugins to dist dir  (not used?!)
        <copy todir="${dist}/lib">
            <fileset dir="${lib}"/>
		</copy>-->
	</target>

	<!-- =================================
			target: deploy
	     ================================= -->
	<target name="deploy" depends="dist" description="deploy the plugin (jar
		and class)">
		<echo>Deploying One-to-One</echo>

		<!-- copy the jar files 
      <copy file="${lib}/*.jar" todir="${xop_dir}/dist/lib"/> -->
		<copy file="${dist}/${jar.name}" todir="${xop_dir}/dist/plugins" />
		<copy file="${dist}/${jar.name}" todir="${xop_dir}/plugins" />

	</target>

	<!-- =================================
			target: undeploy
	     ================================= -->
	<target name="undeploy" description="undeploy the plugin">
		<delete file="${xop_dir}/dist/plugins/${jar.name}" />
		<delete file="${xop_dir}/plugins/${jar.name}" />
		<echo>Remember to remove dependency jars from ${xop_dir}/dist/lib</echo>
	</target>

	<!-- =================================
			target: redeploy
	     ================================= -->
	<target name="redeploy" depends="undeploy, deploy" description="redeploy the plugin">
	</target>
	<!-- =================================
			target: clean
	     ================================= -->
	<target name="clean" depends="undeploy,test-clean" description="Delete dist directory.">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${docs}/javadoc" />
	</target>

	<!-- =================================
			target: javadoc  
	     ================================= -->
	<target name="javadoc" depends="init" description="creates javadocs">
		<javadoc packagenames="edu.*" sourcepath="${src}" excludepackagenames="examples.*" destdir="${docs}/javadoc" classpathref="project.classpath" />
	</target>

	<!-- ===============================
         target: test
        run junit tests on the MUC component
        =============================== -->

	<target name="test-init" depends="init">
		<mkdir dir="${test.build}" />
	</target>
	<path id="test.classpath">
		<path refid="project.classpath" />
		<fileset dir="${test.lib}" includes="*.jar" />
		<pathelement location="${test.build}" />
		<pathelement location="${build}" />
	</path>

	<target name="test-compile" depends="test-init,compile" description="compiles unit tests">
		<echo>Classpath: ${test.classpath}</echo>
		<javac includeantruntime="true" srcdir="${test}" destdir="${test.build}">
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<target name="test-clean">
		<delete dir="${test.build}" />
	</target>

	<target name="test" depends="test-compile" description="Runs unit tests">
		<junit printsummary="yes">
			<!-- this system property is set for TestXopProperties.testGetSystemProperties() -->
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.build}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>



</project>
