# XOP Properties File
# Note: these properties can be overridden by setting system properties at the
# command line. e.g. java -Dxop.bind.interface=eth0 -jar xop.jar
# or using the run.sh script: e.g. run.sh -D xop.bind.interface=eth0

### General XOP properties ###
# The domain name for this XOP instance
xop.domain=proxy

# When set to true, this displays a window per client that shows the xml conversation
xop.show.debug.window=false

# force plaintext authentication. for debugging purposes and demo purposes. 
# true - always use plaintext authentication. false - TLS will be used.
xop.debug.force.plain.auth=false

# Specify the type of controller interface. "network" - means control XOP through a remote interface
#  "text" (default) - handling input from the command line.
controller.gui=text

### Properties and Config files ###
# Directory to look for configuration files
xop.config.dir=./config

# Whether or not to save properties when they are changed
xop.properties.saveOnChange=false

### Client Handling ###
# Authentication provider for this instance (default requires no password)
xop.client.authentication.provider=edu.drexel.xop.client.SimpleAuthenticationProvider

# How often to garbage collect dead client connections
xop.client.connection.reap.period.ms=5000

### XOP Router threadpool config and IQ timeouts ###
# Size of core thread pool for transporting packets
xop.router.core.pool.size=10

# Max threads to use for the thread pool
xop.router.max.pool.size=20

# Timeout period for an IQ request.  An error is sent if an IQ takes longer than this in ms to respond
xop.router.iq.timeout=2000

# Bind interfaces, separate by commas. The first interface is the one used to connect local clients.
xop.bind.interface=eth0

# Specify is xmpp ping is supported
xop.ping.supported=true

#### XOP component properties ####
# True to poll for new component JARS, false to only load plugins on startup
xop.component.autoload=true

# Polling period if autoload is set to true
xop.component.autoload.poll.period.ms=5000

# Directory to look for plugins in
xop.component.autoload.dir=./plugins/

# Specify which plugins to enable. Separate by commas, no spaces.
# Use the subdomain element in component.xml of the component. e.g. "conference" for muc plugin, and "mucbridge" for xog. 
#  Available components: muc, xog, s2s
xop.enabled.components=muc

# Specify the TTL of Multicast packets
xop.multicast.ttl=64

############################################################
#                     GUMP properties                      #
############################################################
#input transport: TCP
#Gump.Transport=mil.navy.nrl.protean.gump.transport.input.imp.ssl.SSLInstance
Gump.Transport=mil.navy.nrl.protean.gump.transport.input.imp.tcp.TCPInstance
#Gump.Transport=mil.navy.nrl.protean.gump.transport.input.imp.udp.UDPInstance

#Multicast
#Gump.Multicast=mil.navy.nrl.protean.gump.transport.multicast.imp.NormMulticast
Gump.Multicast=mil.navy.nrl.protean.gump.transport.multicast.imp.JDKMulticastSocket

#Discovery
#Gump.Discovery=mil.navy.nrl.protosd.api.imp.jmdns.JmDNSInstance
Gump.Discovery=mil.navy.nrl.protosd.api.imp.indi.INDIInstance

#set the multicast proxy - use the DemoProxy class
#Gump.Proxy=mil.navy.nrl.protean.gump.proxy.imp.Forwarder
Gump.Proxy=edu.drexel.xop.net.gump.GumpXopProxy

# Some defaults
Gump.Server.Port=5222

# do not use this property! Use xop.bind.interface instead
#Gump.Network.Interface.Address=0.0.0.0
#Gump.Network.Interface.Address=192.168.11.191

#Default receiver address for the output of a gump proxy is the loopback on port 5678
Gump.Receiver.Port=5678
Gump.Receiver.Address=127.0.0.1

############################################################
#      Service Discovery Options (ProtoSD Options)         #
############################################################
# General
#- mode(reactive, oppcache or proactive): Lifetime (TTL) of the service

# - ttl(long): Lifetime (TTL) of the service (All times are in milliseconds)
xop.sds.indi.ttl=60000

# - rai(long): Service proactive readvertisement interval for sending advertisements
xop.sds.indi.rai=2000

# - numra(int): Number of times to readvertise the service (-1 = forever)
xop.sds.indi.numra=-1

# - cqi(comma seperated list of longs): Times a client queries for a service e.g. 0,100,200
xop.sds.indi.cqi=0,100,200,400,800,1600

# - sci(long): Proactive service cancel notification interval
xop.sds.indi.sci=5000

# - numscm(int): Number of times to send proactive service cancellations
xop.sds.indi.numscm=3

# - loopback - sets whether the instances of indi allow loopback or not
xop.sds.indi.loopback=true

# - duplicates - sets whether the instances of indi allow duplicate adverts or whether duplicate adverts are supressed.
xop.sds.indi.duplicates=false

# Port to listen on for MUC traffic
xop.muc.port=5250

# point-to-point connections in XOP 
xop.port.p2pj=5562

############################################################
#       Put Component Configuration parameters here        #
############################################################

#### XOG: server-to-server properties ####

# the gateway prefix. generally won't need to change this
xop.s2s.prefix=conference

# the hostname of the XMPP server to initiate the gateway.
xop.s2s.server=openfire

# the port to connect to on the xog.server
xop.s2s.port=5269

# whitelisted server-2-server servers, comma delimited (no spaces)
xop.s2s.whitelist=openfire,conference.openfire
