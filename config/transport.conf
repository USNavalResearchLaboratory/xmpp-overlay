# [String(s)] The components to load.
te.components=clientmgr,protocolmgr,persistencemgr,contentstore
# [Boolean] If the TE is being run in emulation.
te.is_emulated=true

# [String] The network interface on which to listen for clients.
clientmgr.listen.iface=lo
# [Integer] The port on which to listen for clients.
clientmgr.listen.port=1998
# [Integer] The number of messages UIDs to maintain for each client for duplicate detection.
clientmgr.buffer_size=500

# [IP Range(s)] Range(s) of IPs into which destination addresses will be hashed.
transport.ips=224.1.128.1-224.1.255.254

# [String] Path for storing sqlite databases.
contentstore.path=/tmp
# [Boolean] Reset the database on startup.
contentstore.reset_database=true
# [Integer] Maximum number of messages to cache in memory.
contentstore.cache_limit=256

# [Integer] Port to use for UDP traffic.
protocol.udp.port=3000
# [Integer] TTL for UDP traffic.
protocol.udp.ttl=32
# [Integer] Port to use for NORM traffic.
protocol.norm.port=3004
# [Integer] Buffer space for NORM sender.
protocol.norm.buffer_space=1048576
# [Integer] Segment size for NORM sender.
protocol.norm.segment_size=1400
# [Integer] Block size for NORM sender.
protocol.norm.block_size=64
# [Integer] Number of parity symbols for NORM sender.
protocol.norm.num_parity=16
# [Integer] Receive buffer space for NORM session.
protocol.norm.recv_buffer_space=1048576

# [Integer] Maximum number of messages in a manifest.
algorithm.manifest.manifest_length=25
# [Integer] Time to sleep between each broadcast in ms.
algorithm.manifest.sleep_ms=1000
# [String] Destination of manifest traffic.
algorithm.manifest.destination=manifest-channel
# [Boolean] If reliable transport should be used.
algorithm.manifest.reliable=false
# [Integer] k-value for Trickle.
algorithm.trickle.k=2
# [Integer] Minimum Tau for Trickle.
algorithm.trickle.taul=1
# [Integer] Maximum Tau for Trickle.
algorithm.trickle.tauh=10
# [Integer] Advertisement interval in ms.
algorithm.trickle.advert_ms=5000
# [Integer] Maximum number of messages in a manifest.
algorithm.trickle.manifest_length=25
# [Boolean] If reliable transport should be used.
algorithm.trickle.reliable=false
# [String] Destination of trickle traffic.
algorithm.trickle.destination=trickle-channel

# [Integer] Total number of nodes using DDM.
ddm.num_nodes=10
# [Integer] Density threshold.
ddm.dense_threshold=2
# [Integer] Refresh interval in ms.
ddm.refresh_ms=500
# [Integer] Maximum period to keep DDM observations in ms.
ddm.fresh_period_ms=500
# [Integer] Weight of remote observations.
ddm.lambda=25
# [Integer] Seconds in a DDM 'unit.'
ddm.seconds_per_unit=1000
# [Integer] Byte count threshold for high/low bandwidth.
ddm.bytes_threshold=5000
